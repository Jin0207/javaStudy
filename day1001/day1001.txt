<제어문>
프로그램의 명령 흐름을 제어하기 위한 문장
1.선택문
 조건에 따라 실행시켜야할 명령어를 선택하기 위한 문장 -- if , switch
2.반복문
 주어진 조건을 만족하는 동안에 주어진 명령어(들)을 반복 실행시키기위한 문장
3.break. continue
-------------------------------------------------------------------------------------------------------------------

<for 문의 형식>
 for( 초기값; 조건식; 증감식) 
{ 
    // 조건식을 만족하는 동안에 실행되는 문장
 }

ex) for (int i = 1; i < 10; i++) // ; 은 생략불가
     {
	sum += i
      }
  1. i = 1 부터 시작
  2. sum = sum + 1
  3. i++ -> i = 2
  4. 조건식 확인 -> 2 < 10
  5. 만족하니깐 다시 2번으로 감
  6.  .....i = 9까지 실행
  7. i++ -> i = 10
  8. 조건식확인 -? 10 < 10
  9. 조건식 만족하지 않으니 {} 밖으로 나가 본래 명령흐름대로 명령 실행

  if) {} 밖에서 i를 출력할 수 없다, 출력할려면 i를 for문 밖에서 선언해야함. 
  if) 밖에서 i를 선언하고 {}밖에서 i를 출력한다면 i = 10

  * 반복문 밖에서 선언한 변수이름은 반복문 안에서 선언한 변수이름이 될 수 없다.
    but, 반복문 안에서 선언한 변수이름은 중복해서 이름을 사용할 수 있다. 
           -- 반복문 안 변수는 반복문 안에서만 살아있다.
-----------------------------------------------------------------------------------------------------------
 <break>
    : switch 문이나 반복문에서 사용
      어떤 상황이 되었을 때 반복문이나  switch문을 빠져나오는 용도

===========================================================================

<배열과 반복문>

 배열 : 
         변수를 수백개 선언하여 사용할 수 없으니
         수백 개의 데이터를 대표할 수 있는 변수이름으로 선언해서 수백개를 저장 시킬 수 있다.
         하지만 그 대표하는 변수의 타입 과 수백 개의 데이터의 타입이 같아야한다.
 ex) int[] age = new int[5];
     *[]는 데이터들을 담을 칸이 나뉜 큰 정리함? -- 칸은 0부터 시작함 (칸 : 인덱스)
     *new int[5] --칸이 나뉜 큰 정리함을 5칸으로 나눌 것이다.
     
      age[0] = 27;
     *age라는 큰 정리함의 0번째 칸에 정수값 27을 담을 것이다 -- age: 정수형 데이터를 담는 큰 정리함 -> int[] age로 위에서 선언함
---------------------------------------------------------------------------------------------------------------------------------------------------
ex) int[] age = {27, 25, 24, 20, 21}; 
//변수를 선엄함과 동시에 각 칸에 값을 초기화 시켜줌 -- 칸의 개수는 정해지지 않음, 초기화한 만큼 칸이 늘어남 (배열의 크기가 커짐)

 




