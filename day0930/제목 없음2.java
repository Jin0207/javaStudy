Git 사용 –프롬프트창을 이용해서
1.	크롬 브라우저에서 “download git” 검색하여 다운받기
2.	Git init
3.	 Git add .  모든파일을 올리겟다
4.	C:\javaStudy>git commit -m "git 저장소 생성" –커밋생성 메시지
5.	저장소에 밀어넣기 
git branch -M main
git remote add origin https://github.com/Jin0207/javaStudy.git
git push -u origin main
	
*error – please see http ~ token ~
구글 – git token 해서 매뉴얼대로
암호대서 git 토큰을 사용함 – ctrl+c는 안됨 그럼 다 입력해야함
Token 생성 한번한거 잘 저장해놓기 – 한번만 보여주고 그 토큰안 쓰면 새로운 저장소를 만들어야해
6.	Git add.
7.	Git commit -m “파일명”
8.	Git push -u origin main
 
<<오류의 종류>>
1.	문법오류
자바 문법 규칙에 맞지 않는 오류 –컴파일 오류
컴파일시에 오류 메시지 출력
오류메세지를 따라 오류를 해결하고 다시 컴파일 해

2.	논리오류
자바문법은 올바르지만 논리적으로 문제해결을 잘못 판단하여
프로그램이 작성되어 원하는 대로 동작하지 않는 오류.
	이런 경우를 “버그”가 있다.고 말하며
	이러한 “버그”를 해결하는 과정을 “디버깅”한다.라고 한다.
3.	실행오류
자바문법 올바름 
 잘 실행됨 but 사용자의 부주의로 인한 에러 
– 정수타입변수에 실수 입력 등, 
사용자의 프로그램 사용 미숙 등으로 인하여 발생하는 오류
예외처리를 통하여 문제해결
<<이름 작성의 규칙>>
클래스 이름이나 변수 이름이나 메소드 이름을 정해 줄 때에는 가능하면 의미있는 이름으로 정해줌  사용자 임의대로
But! 다음의 내용은 지켜야함
-	클래스 이름이나 변수이름이나 메소드이름의 “첫”글자는 영문or “_”,”&”기호 사용가능
-	특별한 경우 아니면 기호 사용 x 영문이 보편적
-	클래스이름의 첫 글자는 대문자로 시작
-	변수이름이나 메소드이름의 첫글자는 소문자
-	두단어가 합쳐질때는 두번째단어의 시작을 알리기위해 대문자로 작성 ex)myAge 
-	모든 이름에는 공백문자를 포함할 수 없다.
-	폴더를 만들때에도 가급적이면 공백문자를 사용하지 x
<<주석문>>
-	프로그램의 실행에 영향x 설명을 위한 문장 
 협업을 위한 다른 개발자 or 후임자 or 내 자신을 위해서 설명문이 필요할 때 사용
	한줄 주석  //
	여러줄 주석  /*  */
-	논리오류를 제거하기 위한 디버깅을 할 때에도 의심되는 코드를 주석문으로 처리해 가면서 활용할 수 있다
<<제어문>>
-	프로그램의 흐름을 제어하는 문장들
1.	선택문
2.	반복문
3.	Break, continue
<선택문>
-	프로그램의 흐름에 따라 혹은 상황에 따라 
실행시키고자 하는 문장을 선택하기 위한 문장을 말한다.
1.	If문
조건식에 따라 실행시키고자 하는 문장을 선택할 때 사용
조건식이 참일 때 실행할 문장과 거짓일 때 실행할 문장이 서로 달라지게 사용,
조건식이 참인지만 판별하게 사용, 여러가지 조건식을 차례로 판별하도록 사용 등
1_1 기본형식
	If( 조건식 ) 
   조건식이 참일 때 실행할 명령어;
Else
조건식이 거짓일 때 실행할 명령어;
	두가지 이상의 명령어를 시행시킬려면 중괄호{}로 반드시 묶어주어야함.
--안묶어주면 error!
2.	Switch case문
