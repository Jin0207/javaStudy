<this 와 this()>

this.
멤버변수와 메서드의 매개변수 이름을 유의미하게 작성하다보니
멤버변수의 이름과 매개변수 이름이 동일할 수가 있다.
이때 변수이름을 사용하게 되면
자바에서는 매개변수의 우선순위가 높기 때문에 매개변수로 인식하게된다.
그렇기에
멤버변수의 앞에 "this."을 붙혀
멤버변수임을 알려준다.

this()
생성자가 중복정의 되고 있을 때,
this()를 통하여 같은 이름의 다르게 정의되어 있는 생성자를 호출할 수 있다.
단, this()는 반드시 생성자으 첫 번째 줄에 정의되어야한다.
-----------------------------------------------------------------------------------------
<생성자>
클래스의 이름과 같은 이름으로 정의된 메서드로
멤버변수들을 초기화시켜주기위해 사용된다,

생성자는 객체생성이 이루어 질때, 자동적으로 실행됨
자동으로 실행되기 때문에
"return"과 반환타입을 사용하지 않는다.

생성자는 중복하여 여러개 정의 될 수 있다.
그렇기 위해서는
매개변수의 타입 + 작성된 순서 나 개수가 달라야한다.

생성자가 중복하여 정의되고 있을 때,
다른 생성자를 this() 키워드를 통하여 호출할 수 있고,
this()는 무조건 첫 번째 문장에 와야한다.

<기본생성자>
생성자가 한 개도 정의되어 있지 않다면
자바가 자동적으로 기본생성자를 만들어준다.
->하나라도 정의되어 있다면 기본생성자를 만들어주지 않음.
    그렇기에 무조건 생성자를 정의할 때에는 기본생성자를 정의해주자

기본생성자 -> 매개변수가 없는 생성자

모든 생성자의 목적은
멤버변수를 초기화시켜주기 위함이고,
기본생성자의 중괄호안에 아무것도 없다면,
기본값을 초기화 시켜준다.
----------------------------------------------------------------------------------------

변수의 타입을 정할 때,
주민번호, 계좌번호, 전화번호와 같은 경우
"번호"이기는 하지만 계산을 위해서 사용하는 데이터가아님
이런 경우는 자료형은 String

계산을 위한 데이터라면 int
---------------------------------------------------------------------------------------
<static 키워드>
클래스 변수, 메서드라고 정의하는 키워드

공통적인 속성인 경우
변수를 선언할 때, 앞에다가 static을 붙혀준다.

static은 클래스가 메모리에 로드될 때,
한 메모리 공간안에 static 변수, 메서드가 저장된다.
그렇기에
"클래스명.변수명(메서드명)"으로
객체를 생성하지 않고 바로 사용이 가능하다.

물론, 
생성된 객체의 참조변수를 통해서도 사용할 수 있다.

static 메서드()는
static 변수들만을 사용하거나 변수를 사용하지 않는 메서드일 경우
static을 붙혀준다.
멤버변수가 한 개라도 들어간다면, 
static을 붙혀줄 수 없다.

클래스변수와 마찬가지로
객체생성없이 클래스명을 통하여 바로 사용할 수 있다.
--------------------------------------------------------------------------------------------------------------------------------------------

<메서드의 중복>-- 메서드 오버로딩

생성자와 마찬가지로 메서드도 중복하여 정의할 수 있다.
중복정의할 수 있는 조건도 생성자와 마찬가지로
매개변수의 개수 나 타입이 달라야한다.
---------------------------------------------------------------------------------------------------------------------------

<메서드의 값에 의한 호출, 참조에 의한 호출>

1.메서드의 값에 의한 호출
메서드 호출 시
전달되는 매개변수의 타입이 기본자료형인 경우

메서드 호출 시
매개변수의 값을 메서드에 전달해줌,
메서드 안에서 값이 변하여도
매개변수의 저장공간이아닌 별도의 저장공간에 값을 저장하기 때문에
매개변수의 값과는 전혀 상관이 없다.

2.메서드 호출 시, 매개변수가 배열참조변수 이거나 객체 참조변수인 경우
참조형은 메모리공간의 주소를 가리키고 있는 것이므로
참조형이 호출당할 때는 그 메모리공간의 주소를 넘겨주는 것임.
주소가 전달되었기 때문에
메서드 안에서 값이 변한다면 같은 주소를 참조하고 있는 변수들의 값도 동일하게 변함

=======================================================================
<재귀 호출>
메서드 내에서 자기 자신을 반복적으로 호출하는 것
